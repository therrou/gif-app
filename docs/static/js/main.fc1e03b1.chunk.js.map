{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","placeholder","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAmCeA,EAhCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAlBS,SAACP,GAElBF,EAAcE,EAAEQ,OAAOF,QAiBfG,YAAa,qB,+BCzBfC,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUT,GAF7C,+DAGDU,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXF,IAAKA,EAAIG,OAAOC,iBAAiBZ,QATrB,kBAabM,GAba,4CAAH,sDCERO,EAAc,SAAC,GAAuB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOF,EAAU,EAAVA,IAGpC,OADAM,QAAQC,IAAIN,EAAIC,EAAOF,GAEnB,sBAAKQ,UAAU,yCAAf,UACI,qBACIC,IAAMT,EACNU,IAAMR,IACV,kCAAKA,EAAL,WCNCS,EAAU,SAAC,GAAoB,IAAjB3B,EAAgB,EAAhBA,SAAgB,ECDf,SAACA,GAAc,IAAD,EACVR,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXGC,qBAAW,WACNzB,EAASN,GACJgC,MAAM,SAAAhB,GACHc,EAAU,CACNjB,KAAMG,EACNY,SAAS,SAKvB,CAAE5B,IACD6B,EDd2BI,CAAcjC,GAAlCmB,EAFyB,EAE9BN,KAAae,EAFiB,EAEjBA,QAEtB,OACI,qCACI,mCAAM5B,EAAN,OACK4B,GAAW,mBAAGJ,UAAU,uBAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAAC,GACR,OAAS,cAAC,EAAD,eAEGA,GADIA,EAAIC,aEmBjCiB,EA9BM,WAAO,IAAD,EAEY1C,mBAAS,CAAC,cAFtB,mBAEjB2C,EAFiB,KAEL5C,EAFK,KASzB,OACE,qCACE,+CACE,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEG,6BACM4C,EAAWpB,KAAK,SAAEf,GAChB,OAAO,cAAC,EAAD,CAEEA,SAAWA,GADNA,YClBjCoC,IAASC,OAAS,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.fc1e03b1.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        // console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( category => [inputValue, ...category]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value = {inputValue}\r\n                onChange = { handleChange }\r\n                placeholder= 'Search for...'\r\n            /> \r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;"," export const getGifs = async (category) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=eOPFYeeY4WgoY8bD8k4eXjf5GFFyF1ax`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            img: img.images.downsized_medium.url\r\n        }\r\n    }) \r\n    // console.log(gifs)\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, img} ) => {\r\n\r\n    console.log(id, title, img)\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img \r\n                src= {img}\r\n                alt= {title} /> \r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n   \r\n    const {  data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n                {loading && <p className='animate__backOutLeft'>Loading...</p>}\r\n                <div className='card-grid'>\r\n                    { \r\n                        images.map( img => {\r\n                            return   <GifGridItem \r\n                                    key = { img.id}\r\n                                    {...img} />\r\n                    })\r\n                    }\r\n                    \r\n                </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState ] =  useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n       useEffect( () => {\r\n            getGifs( category )\r\n                .then( img => {\r\n                    setState( {\r\n                        data: img,\r\n                        loading: false\r\n                    });\r\n\r\n                    \r\n                })\r\n       }, [ category ])\r\n    return state\r\n}\r\n","import React, {useState} from 'react';\n\nimport AddCategory from './components/AddCategory.js'\nimport { GifGrid } from './components/GifGrid.js';\n\nconst GifExpertApp = () => {\n\n  const [ categories, setCategories] = useState(['One Punch'])\n\n  // const handleAdd = () =>{\n  //     setCategories([...categories, 'Pokemon'])\n    \n  // }\n\n  return (\n    <>\n      <h2> GifExpertApp</h2>\n        <AddCategory setCategories = { setCategories } />\n        <hr /> \n         \n           <ol> \n                {categories.map( ( category ) => {\n                   return <GifGrid \n                            key={category} \n                            category= {category} /> \n                })}\n           </ol>\n         \n    </>\n\n  )\n\n};\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp.js';\n\nReactDOM.render(  <GifExpertApp />, document.getElementById('root') );\n"],"sourceRoot":""}